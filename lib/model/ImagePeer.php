<?php

/**
 * Skeleton subclass for performing query and update operations on the 'image' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * 05/07/15 12:45:25
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lib.model
 */
class ImagePeer extends BaseImagePeer {

    /**
     * this method change titles for each image (current and new)
     * @param array $titles
     * @param array $ids
     */
    static public function setImageTitleById($titles, $ids) {
        for ($i = 0; $i < count($titles); $i++) {
            // send query only if title has some string info
            if (strlen($titles[$i]) > 0) {
                $stm = Propel::getConnection()->prepare('
                            UPDATE image 
                            SET title=:title 
                            WHERE id=:id
                    ');
                $stm->bindParam(':title', $titles[$i]);
                $stm->bindParam(':id', $ids[$i]);
                $stm->execute();
            }
        }
    }
    /**
     * cleaning our DB from images? which aren't using at our DB
     * @return type
     */
    static public function cleanImagesWithoutConnections() {
        //getting image id from all tables with images
        $anketaImageId            = AnketaPeer::getAllAnketaImageId();
        $newsImageId              = NewsPeer::getAllNewsImageId();
        $albumImageId             = AlbumHasImagePeer::getAllAlbumImageId();
        $albumCoverImageId        = AlbumPeer::getAllAlbumCoverImage();
        //this array contents all using by project images id
        $allCurretlyUsingImagesId = array_unique(array_merge($anketaImageId, $newsImageId, $albumCoverImageId, $albumImageId));
        $allImageId               = self::getAllImageId();
        //now we looks for unusing images - getting their images id for further deleting from 
        $allUnusingImagesId       = array_diff($allImageId, $allCurretlyUsingImagesId);
         //finally delete all unusing images from db;
        $c = new Criteria();
        $c->add(self::ID, $allUnusingImagesId, Criteria::IN);
        return self::doDelete($c);
    }
    
    
    /**
     * looks for all images id at our project
     * @return array all image id
     */
    static function getAllImageId() {
        $stm        = Propel::getConnection()->prepare
                ('
                    SELECT
                        img.id
                    FROM
                        image img 
                ');
        $stm->execute();
        $allImageId = $stm->fetchAll(PDO::FETCH_COLUMN, 0);
        return $allImageId;
    }

}

// ImagePeer
